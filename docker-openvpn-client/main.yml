---
- name: Configure OpenVPN routing on Docker host
  hosts: all
  become: true
  vars_files:
    - vars.yml
  gather_facts: no

  tasks:

    - name: Obtener la IP del contenedor OpenVPN
      shell: docker inspect {% raw %}-f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'{% endraw %} {{ openvpn_container_name }}
      # shell: docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' {{ openvpn_container_name }}
      register: openvpn_container_ip
      check_mode: no
      changed_when: false
      # async: 60
      # poll: 60

    - name: Print Container IP
      debug:
        msg: "Container IP: {{ openvpn_container_ip.stdout }}"

    - name: AÃ±adir tabla de rutas personalizada "vpn"
      lineinfile:
        path: /etc/iproute2/rt_tables
        line: "200 vpn"
        state: present

    - name: Obtener el ID de la red de Docker
      shell: docker network ls -qf name={{ docker_network_name }}
      check_mode: no
      register: docker_network_id
      changed_when: false

    - name: Print Container Network ID
      debug:
        msg: "Container Network ID: {{ docker_network_id.stdout }}"

    - name: Obtener la interfaz de red de Docker
      set_fact:
        docker_interface: "br-{{ docker_network_id.stdout }}"

    - name: Print Container Interface
      debug:
        msg: "Container Interface: {{ docker_interface }}"

    - name: Crear reglas de enrutamiento para IPs origen especificadas
      loop: "{{ source_ips }}"
      command: ip rule add from {{ item }}/32 table vpn
      ignore_errors: true
      when: item is defined

    - name: Crear la ruta por defecto hacia el contenedor de OpenVPN
      shell: ip route add default via {{ openvpn_container_ip.stdout }} dev {{ docker_interface }} table vpn
      ignore_errors: true
